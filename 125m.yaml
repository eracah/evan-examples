run_name: elastic-chkpt-test-125m-8-gpus

gpu_type: a100_40gb
gpu_num: 8
platform: r12z1
image: mosaicml/ci-staging:3a547e5b-0b8f-4e15-9b95-4379b09640af

integrations:
  - integration_type: git_repo
    git_repo: eracah/evan-composer
    git_branch: new-elastic-chkpt
    pip_install: '.[all]'
  - integration_type: git_repo
    git_repo: mosaicml/examples
    git_branch: release/v0.0.4
    pip_install: '.[llm]'


command: |
  pip uninstall -y torch
  pip3 install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu117
  python -c "import torch; print(torch.cuda.is_available()); print(torch.__version__)"
  cd examples/examples/llm
  composer main.py /mnt/config/parameters.yaml

parameters:
  data_local: ./my-copy-c4
  data_remote: s3://mosaicml-internal-checkpoints-shared/c4/gpt2-tokenized-2k # If blank, files must be present in data_local
  tokenizer_name: gpt2
  max_seq_len: 2048
  global_seed: 17

  # Run Name
  run_name: torch-dist-chkpt-test-125m-8-gpus

  # Model
  model:
    name: mosaic_gpt
    init_device: meta
    tokenizer_name: ${tokenizer_name}
    d_model: 768
    n_heads: 12
    n_layers: 12
    mlp_ratio: 4
    max_seq_len: ${max_seq_len}
    vocab_size: 50368
    attn_impl: torch
    loss_fn: torch_crossentropy

  # Tokenizer
  tokenizer:
    name: ${tokenizer_name}
    kwargs:
      model_max_length: ${max_seq_len}

  # Dataloaders
  train_loader:
    name: text
    dataset:
      local: ${data_local}
      remote: ${data_remote}
      split: train
      shuffle: true
      tokenizer_name: ${tokenizer_name}
      max_seq_len: ${max_seq_len}
      shuffle_seed: ${global_seed}
    drop_last: true
    num_workers: 8

  eval_loader:
    name: text
    dataset:
      local: ${data_local}
      remote: ${data_remote}
      split: val
      shuffle: false
      tokenizer_name: ${tokenizer_name}
      max_seq_len: ${max_seq_len}
      shuffle_seed: ${global_seed}
    drop_last: false
    num_workers: 8

  # Optimization
  scheduler:
    name: cosine_with_warmup
    t_warmup: 100ba
    alpha_f: 0.1

  optimizer:
    name: decoupled_adamw
    lr: 6.0e-4
    betas:
    - 0.9
    - 0.95
    eps: 1.0e-08
    weight_decay: 0.0

  algorithms:
    gradient_clipping:
      clipping_type: norm
      clipping_threshold: 1.0

  max_duration: 4ba # ~ 2.5B tokens
  eval_interval: 500ba
  eval_first: false
  eval_subset_num_batches: -1
  global_train_batch_size: 32

  # System
  seed: ${global_seed}
  device_eval_batch_size: 32
  device_train_microbatch_size: 1
  # device_train_microbatch_size: auto
  precision: amp_bf16

  # FSDP
  fsdp_config:
    sharding_strategy: FULL_SHARD
    mixed_precision: PURE
    activation_checkpointing: false
    activation_checkpointing_reentrant: false
    activation_cpu_offload: false
    limit_all_gathers: true
    verbose: false
    state_dict_type: sharded

  # Logging
  progress_bar: false
  log_to_console: true
  console_log_interval: 1ba

  callbacks:
    speed_monitor:
      window_size: 10
    # mono_chkpt_saver:
    #   save_folder: s3://mosaicml-internal-checkpoints-test/evan-test/checkpoints/ex-mono-test5/mono-{run_name}
    #   filename: ba{batch}/monlith.pt
    #   batch_interval: 3
    lr_monitor: {}
    memory_monitor: {}
    runtime_estimator: {}

  # loggers:
  #   wandb: {}

  # Checkpoint to local filesystem or remote object store
  #save_interval: 2ba
  # save_num_checkpoints_to_keep: 1  # Important, this cleans up checkpoints saved to DISK
  #save_folder: s3://mosaicml-internal-checkpoints-test/evan-test/checkpoints/elastic-chkpt-test/125m/{run_name}
  # save_folder: s3://my-bucket/my-folder/{run_name}/checkpoints

  # Load from local filesystem or remote object store
  load_path: s3://mosaicml-internal-checkpoints-test/evan-test/checkpoints/elastic-chkpt-test/125m/torch-dist-chkpt-test-125m-16-gpus/ep0-ba2/
  #load_path: s3://mosaicml-internal-checkpoints-test/evan-test/checkpoints/ex-mono-test2/mono-mono-chkpt-callback-test-125m/ba4/monlith.pt
